# Calendar Sync Service Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment (development, production)
NODE_ENV=development

# Enable dry run mode (true/false) - when true, no actual changes are made
DRY_RUN=false

# Sync window in days (how many days ahead to sync)
SYNC_WINDOW_DAYS=30

# Cron schedule for sync (default: Sundays at 2 AM)
# Format: "minute hour day_of_month month day_of_week"
# Examples:
# - "0 2 * * 0" = Every Sunday at 2 AM
# - "0 0 * * *" = Every day at midnight
# - "0 */6 * * *" = Every 6 hours
SYNC_SCHEDULE="0 2 * * 0"

# =============================================================================
# iCLOUD CALENDAR SETTINGS
# =============================================================================

# Your Apple ID email address
ICLOUD_USERNAME=your-apple-id@example.com

# App-specific password for iCloud
# Generate this at: https://appleid.apple.com/account/manage -> Sign-In and Security -> App-Specific Passwords
# IMPORTANT: This is NOT your regular Apple ID password!
ICLOUD_APP_PASSWORD=your-app-specific-password

# Optional: Custom CalDAV URL (leave empty for default iCloud URL)
# ICLOUD_CALENDAR_URL=https://caldav.icloud.com

# Filter events for specific user (name, email, or keyword to look for in events)
# This filters iCloud events to only sync those containing this text
USER_FILTER=Your Name

# =============================================================================
# GOOGLE CALENDAR SETTINGS
# =============================================================================

# Google Service Account email (from your service account JSON file)
GOOGLE_SERVICE_ACCOUNT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com

# Google Service Account private key (from your service account JSON file)
# IMPORTANT: Keep the quotes and replace \\n with actual newlines
GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----"

# Google Calendar ID where events will be synced to
# This can be found in Google Calendar settings for the specific calendar
# Format: usually looks like "primary" for main calendar or "email@gmail.com" or a random string
GOOGLE_CALENDAR_ID=primary

# Optional: User to impersonate (for Google Workspace domain-wide delegation)
# Only needed if using domain-wide delegation
# GOOGLE_IMPERSONATE_USER=user@yourdomain.com

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. NEVER commit the actual .env file to version control
# 2. Use app-specific passwords for iCloud, not your main password
# 3. Limit Google Service Account permissions to only Calendar API
# 4. Consider using environment variables in production instead of .env files
# 5. Regularly rotate service account keys and app-specific passwords
# 6. Monitor logs for unauthorized access attempts

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# iCloud Setup:
# 1. Go to https://appleid.apple.com/account/manage
# 2. Sign in with your Apple ID
# 3. Go to "Sign-In and Security" -> "App-Specific Passwords"
# 4. Generate a new app-specific password for "Calendar Sync"
# 5. Use that password as ICLOUD_APP_PASSWORD (not your regular password!)

# Google Calendar Setup:
# 1. Go to Google Cloud Console: https://console.cloud.google.com/
# 2. Create a new project or select existing one
# 3. Enable the Google Calendar API
# 4. Create a Service Account:
#    - Go to "IAM & Admin" -> "Service Accounts"
#    - Click "Create Service Account"
#    - Give it a name like "calendar-sync"
#    - Download the JSON key file
# 5. Share your Google Calendar with the service account email
# 6. Extract the email and private_key from the JSON file
# 7. Use those values in the environment variables above

# Docker Setup:
# When running in Docker, you can pass these as environment variables
# or mount the .env file as a volume